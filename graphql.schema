schema {
  query: TeamsQuery
  mutation: TeamsMutation
}

# The `Date` scalar type represents a year, month and day in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar Date

# The `DateTime` scalar type represents a date and time. `DateTime` expects
# timestamps to be formatted in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar DateTime

# The `DateTimeOffset` scalar type represents a date, time and offset from UTC.
# `DateTimeOffset` expects timestamps to be formatted in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar DateTimeOffset

scalar Decimal

interface INode {
  id: ID!
}

type Member implements INode {
  id: ID!
  name: String
}

input MemberInput {
  name: String!
}

# The `Milliseconds` scalar type represents a period of time represented as the total number of milliseconds.
scalar Milliseconds

type MutationViewer {
  addMember(teamId: String!, memberInput: MemberInput!): Member
}

type QueryViewer {
  team(id: String!): Team
}

# The `Seconds` scalar type represents a period of time represented as the total number of seconds.
scalar Seconds

type Team implements INode {
  id: ID!
  members: [Member]
  name: String
}

type TeamsMutation {
  addMember(teamId: String!, memberInput: MemberInput!): Member
  viewer: MutationViewer
}

type TeamsQuery {
  team(id: String!): Team
  viewer: QueryViewer
}

